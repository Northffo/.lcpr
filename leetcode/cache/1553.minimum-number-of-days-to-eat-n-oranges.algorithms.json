{"id":1676,"fid":"1553","name":"吃掉 N 个橘子的最少天数","slug":"minimum-number-of-days-to-eat-n-oranges","link":"https://leetcode.cn/problems/minimum-number-of-days-to-eat-n-oranges/description/","percent":33.20875163683981,"level":"Hard","category":"algorithms","en_name":"Minimum Number of Days to Eat N Oranges","cn_name":"吃掉 N 个橘子的最少天数","totalAC":"18K","totalSubmit":"48.5K","likes":168,"dislikes":0,"desc":"<p>厨房里总共有 <code>n</code>&nbsp;个橘子，你决定每一天选择如下方式之一吃这些橘子：</p>\n\n<ul>\n\t<li>吃掉一个橘子。</li>\n\t<li>如果剩余橘子数 <code>n</code>&nbsp;能被 2 整除，那么你可以吃掉 <code>n/2</code> 个橘子。</li>\n\t<li>如果剩余橘子数&nbsp;<code>n</code>&nbsp;能被 3 整除，那么你可以吃掉 <code>2*(n/3)</code> 个橘子。</li>\n</ul>\n\n<p>每天你只能从以上 3 种方案中选择一种方案。</p>\n\n<p>请你返回吃掉所有 <code>n</code>&nbsp;个橘子的最少天数。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>n = 10\n<strong>输出：</strong>4\n<strong>解释：</strong>你总共有 10 个橘子。\n第 1 天：吃 1 个橘子，剩余橘子数 10 - 1 = 9。\n第 2 天：吃 6 个橘子，剩余橘子数 9 - 2*(9/3) = 9 - 6 = 3。（9 可以被 3 整除）\n第 3 天：吃 2 个橘子，剩余橘子数 3 - 2*(3/3) = 3 - 2 = 1。\n第 4 天：吃掉最后 1 个橘子，剩余橘子数 1 - 1 = 0。\n你需要至少 4 天吃掉 10 个橘子。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>n = 6\n<strong>输出：</strong>3\n<strong>解释：</strong>你总共有 6 个橘子。\n第 1 天：吃 3 个橘子，剩余橘子数 6 - 6/2 = 6 - 3 = 3。（6 可以被 2 整除）\n第 2 天：吃 2 个橘子，剩余橘子数 3 - 2*(3/3) = 3 - 2 = 1。（3 可以被 3 整除）\n第 3 天：吃掉剩余 1 个橘子，剩余橘子数 1 - 1 = 0。\n你至少需要 3 天吃掉 6 个橘子。\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>n = 1\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>n = 56\n<strong>输出：</strong>6\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 2*10^9</code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int minDays(int n) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int minDays(int n) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def minDays(self, n):\n        \"\"\"\n        :type n: int\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def minDays(self, n: int) -> int:"},{"value":"c","text":"C","defaultCode":"\n\nint minDays(int n){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int MinDays(int n) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number} n\n * @return {number}\n */\nvar minDays = function(n) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function minDays(n: number): number {\n\n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer $n\n     * @return Integer\n     */\n    function minDays($n) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func minDays(_ n: Int) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun minDays(n: Int): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int minDays(int n) {\n\n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func minDays(n int) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer} n\n# @return {Integer}\ndef min_days(n)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def minDays(n: Int): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn min_days(n: i32) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (min-days n)\n  (-> exact-integer? exact-integer?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec min_days(N :: integer()) -> integer().\nmin_days(N) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec min_days(n :: integer) :: integer\n  def min_days(n) do\n\n  end\nend"}],"testcase":"10","testable":true,"templateMeta":{"name":"minDays","params":[{"name":"n","type":"integer"}],"return":{"type":"integer"}}}