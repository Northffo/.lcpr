{"id":2084,"fid":"1953","name":"你可以工作的最大周数","slug":"maximum-number-of-weeks-for-which-you-can-work","link":"https://leetcode.cn/problems/maximum-number-of-weeks-for-which-you-can-work/description/","percent":38.6555476456829,"level":"Medium","category":"algorithms","en_name":"Maximum Number of Weeks for Which You Can Work","cn_name":"你可以工作的最大周数","totalAC":"17.2K","totalSubmit":"35.9K","likes":90,"dislikes":0,"desc":"<p>给你&nbsp;<code>n</code> 个项目，编号从 <code>0</code> 到 <code>n - 1</code> 。同时给你一个整数数组 <code>milestones</code> ，其中每个 <code>milestones[i]</code> 表示第 <code>i</code> 个项目中的阶段任务数量。</p>\n\n<p>你可以按下面两个规则参与项目中的工作：</p>\n\n<ul>\n\t<li>每周，你将会完成 <strong>某一个</strong> 项目中的 <strong>恰好一个</strong>&nbsp;阶段任务。你每周都 <strong>必须</strong> 工作。</li>\n\t<li>在 <strong>连续的</strong> 两周中，你 <strong>不能</strong> 参与并完成同一个项目中的两个阶段任务。</li>\n</ul>\n\n<p>一旦所有项目中的全部阶段任务都完成，或者仅剩余一个阶段任务都会导致你违反上面的规则，那么你将&nbsp;<strong>停止工作</strong> 。注意，由于这些条件的限制，你可能无法完成所有阶段任务。</p>\n\n<p>返回在不违反上面规则的情况下你&nbsp;<strong>最多</strong>&nbsp;能工作多少周。</p>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>milestones = [1,2,3]\n<strong>输出：</strong>6\n<strong>解释：</strong>一种可能的情形是：\n​​​​- 第 1 周，你参与并完成项目 0 中的一个阶段任务。\n- 第 2 周，你参与并完成项目 2 中的一个阶段任务。\n- 第 3 周，你参与并完成项目 1 中的一个阶段任务。\n- 第 4 周，你参与并完成项目 2 中的一个阶段任务。\n- 第 5 周，你参与并完成项目 1 中的一个阶段任务。\n- 第 6 周，你参与并完成项目 2 中的一个阶段任务。\n总周数是 6 。\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>milestones = [5,2,1]\n<strong>输出：</strong>7\n<strong>解释：</strong>一种可能的情形是：\n- 第 1 周，你参与并完成项目 0 中的一个阶段任务。\n- 第 2 周，你参与并完成项目 1 中的一个阶段任务。\n- 第 3 周，你参与并完成项目 0 中的一个阶段任务。\n- 第 4 周，你参与并完成项目 1 中的一个阶段任务。\n- 第 5 周，你参与并完成项目 0 中的一个阶段任务。\n- 第 6 周，你参与并完成项目 2 中的一个阶段任务。\n- 第 7 周，你参与并完成项目 0 中的一个阶段任务。\n总周数是 7 。\n注意，你不能在第 8 周参与完成项目 0 中的最后一个阶段任务，因为这会违反规则。\n因此，项目 0 中会有一个阶段任务维持未完成状态。</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>n == milestones.length</code></li>\n\t<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>\n\t<li><code>1 &lt;= milestones[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    long long numberOfWeeks(vector<int>& milestones) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public long numberOfWeeks(int[] milestones) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def numberOfWeeks(self, milestones):\n        \"\"\"\n        :type milestones: List[int]\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def numberOfWeeks(self, milestones: List[int]) -> int:"},{"value":"c","text":"C","defaultCode":"long long numberOfWeeks(int* milestones, int milestonesSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public long NumberOfWeeks(int[] milestones) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} milestones\n * @return {number}\n */\nvar numberOfWeeks = function(milestones) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function numberOfWeeks(milestones: number[]): number {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $milestones\n     * @return Integer\n     */\n    function numberOfWeeks($milestones) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func numberOfWeeks(_ milestones: [Int]) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun numberOfWeeks(milestones: IntArray): Long {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int numberOfWeeks(List<int> milestones) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func numberOfWeeks(milestones []int) int64 {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} milestones\n# @return {Integer}\ndef number_of_weeks(milestones)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def numberOfWeeks(milestones: Array[Int]): Long = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn number_of_weeks(milestones: Vec<i32>) -> i64 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (number-of-weeks milestones)\n  (-> (listof exact-integer?) exact-integer?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec number_of_weeks(Milestones :: [integer()]) -> integer().\nnumber_of_weeks(Milestones) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec number_of_weeks(milestones :: [integer]) :: integer\n  def number_of_weeks(milestones) do\n    \n  end\nend"}],"testcase":"[1,2,3]","testable":true,"templateMeta":{"name":"numberOfWeeks","params":[{"name":"milestones","type":"integer[]"}],"return":{"type":"long"}}}