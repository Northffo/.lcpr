{"id":217,"fid":"217","name":"存在重复元素","slug":"contains-duplicate","link":"https://leetcode.cn/problems/contains-duplicate/description/","percent":55.15705644312111,"level":"Easy","category":"algorithms","en_name":"Contains Duplicate","cn_name":"存在重复元素","totalAC":"851.5K","totalSubmit":"1.5M","likes":1080,"dislikes":0,"desc":"给你一个整数数组 <code>nums</code> 。如果任一值在数组中出现 <strong>至少两次</strong> ，返回 <code>true</code> ；如果数组中每个元素互不相同，返回 <code>false</code> 。\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,1]\n<strong>输出：</strong>true</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,2,3,4]\n<strong>输出：</strong>false</pre>\n\n<p><strong>示例&nbsp;3：</strong></p>\n\n<pre>\n<strong>输入：</strong>nums = [1,1,1,3,3,4,3,2,4,2]\n<strong>输出：</strong>true</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>\n\t<li><code>-10<sup>9</sup> &lt;= nums[i] &lt;= 10<sup>9</sup></code></li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    bool containsDuplicate(vector<int>& nums) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public boolean containsDuplicate(int[] nums) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def containsDuplicate(self, nums):\n        \"\"\"\n        :type nums: List[int]\n        :rtype: bool\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def containsDuplicate(self, nums: List[int]) -> bool:"},{"value":"c","text":"C","defaultCode":"bool containsDuplicate(int* nums, int numsSize) {\n    \n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public bool ContainsDuplicate(int[] nums) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {number[]} nums\n * @return {boolean}\n */\nvar containsDuplicate = function(nums) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function containsDuplicate(nums: number[]): boolean {\n    \n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param Integer[] $nums\n     * @return Boolean\n     */\n    function containsDuplicate($nums) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func containsDuplicate(_ nums: [Int]) -> Bool {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun containsDuplicate(nums: IntArray): Boolean {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  bool containsDuplicate(List<int> nums) {\n    \n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func containsDuplicate(nums []int) bool {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {Integer[]} nums\n# @return {Boolean}\ndef contains_duplicate(nums)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def containsDuplicate(nums: Array[Int]): Boolean = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn contains_duplicate(nums: Vec<i32>) -> bool {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (contains-duplicate nums)\n  (-> (listof exact-integer?) boolean?)\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec contains_duplicate(Nums :: [integer()]) -> boolean().\ncontains_duplicate(Nums) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec contains_duplicate(nums :: [integer]) :: boolean\n  def contains_duplicate(nums) do\n    \n  end\nend"}],"testcase":"[1,2,3,1]","testable":true,"templateMeta":{"name":"containsDuplicate","params":[{"name":"nums","type":"integer[]"}],"return":{"type":"boolean"}}}