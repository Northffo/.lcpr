{"id":1668,"fid":"1542","name":"找出最长的超赞子字符串","slug":"find-longest-awesome-substring","link":"https://leetcode.cn/problems/find-longest-awesome-substring/description/","percent":45.10212950890917,"level":"Hard","category":"algorithms","en_name":"Find Longest Awesome Substring","cn_name":"找出最长的超赞子字符串","totalAC":"11K","totalSubmit":"21.5K","likes":123,"dislikes":0,"desc":"<p>给你一个字符串 <code>s</code> 。请返回 <code>s</code> 中最长的 <strong>超赞子字符串</strong> 的长度。</p>\n\n<p>「超赞子字符串」需满足满足下述两个条件：</p>\n\n<ul>\n\t<li>该字符串是 <code>s</code> 的一个非空子字符串</li>\n\t<li>进行任意次数的字符交换后，该字符串可以变成一个回文字符串</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>示例 1：</strong></p>\n\n<pre><strong>输入：</strong>s = &quot;3242415&quot;\n<strong>输出：</strong>5\n<strong>解释：</strong>&quot;24241&quot; 是最长的超赞子字符串，交换其中的字符后，可以得到回文 &quot;24142&quot;\n</pre>\n\n<p><strong>示例 2：</strong></p>\n\n<pre><strong>输入：</strong>s = &quot;12345678&quot;\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 3：</strong></p>\n\n<pre><strong>输入：</strong>s = &quot;213123&quot;\n<strong>输出：</strong>6\n<strong>解释：</strong>&quot;213123&quot; 是最长的超赞子字符串，交换其中的字符后，可以得到回文 &quot;231132&quot;\n</pre>\n\n<p><strong>示例 4：</strong></p>\n\n<pre><strong>输入：</strong>s = &quot;00&quot;\n<strong>输出：</strong>2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 10^5</code></li>\n\t<li><code>s</code> 仅由数字组成</li>\n</ul>\n","templates":[{"value":"cpp","text":"C++","defaultCode":"class Solution {\npublic:\n    int longestAwesome(string s) {\n\n    }\n};"},{"value":"java","text":"Java","defaultCode":"class Solution {\n    public int longestAwesome(String s) {\n\n    }\n}"},{"value":"python","text":"Python","defaultCode":"class Solution(object):\n    def longestAwesome(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\""},{"value":"python3","text":"Python3","defaultCode":"class Solution:\n    def longestAwesome(self, s: str) -> int:"},{"value":"c","text":"C","defaultCode":"\n\nint longestAwesome(char * s){\n\n}"},{"value":"csharp","text":"C#","defaultCode":"public class Solution {\n    public int LongestAwesome(string s) {\n\n    }\n}"},{"value":"javascript","text":"JavaScript","defaultCode":"/**\n * @param {string} s\n * @return {number}\n */\nvar longestAwesome = function(s) {\n\n};"},{"value":"typescript","text":"TypeScript","defaultCode":"function longestAwesome(s: string): number {\n\n};"},{"value":"php","text":"PHP","defaultCode":"class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function longestAwesome($s) {\n\n    }\n}"},{"value":"swift","text":"Swift","defaultCode":"class Solution {\n    func longestAwesome(_ s: String) -> Int {\n\n    }\n}"},{"value":"kotlin","text":"Kotlin","defaultCode":"class Solution {\n    fun longestAwesome(s: String): Int {\n\n    }\n}"},{"value":"dart","text":"Dart","defaultCode":"class Solution {\n  int longestAwesome(String s) {\n\n  }\n}"},{"value":"golang","text":"Go","defaultCode":"func longestAwesome(s string) int {\n\n}"},{"value":"ruby","text":"Ruby","defaultCode":"# @param {String} s\n# @return {Integer}\ndef longest_awesome(s)\n\nend"},{"value":"scala","text":"Scala","defaultCode":"object Solution {\n    def longestAwesome(s: String): Int = {\n\n    }\n}"},{"value":"rust","text":"Rust","defaultCode":"impl Solution {\n    pub fn longest_awesome(s: String) -> i32 {\n\n    }\n}"},{"value":"racket","text":"Racket","defaultCode":"(define/contract (longest-awesome s)\n  (-> string? exact-integer?)\n\n  )"},{"value":"erlang","text":"Erlang","defaultCode":"-spec longest_awesome(S :: unicode:unicode_binary()) -> integer().\nlongest_awesome(S) ->\n  ."},{"value":"elixir","text":"Elixir","defaultCode":"defmodule Solution do\n  @spec longest_awesome(s :: String.t) :: integer\n  def longest_awesome(s) do\n\n  end\nend"}],"testcase":"\"3242415\"","testable":true,"templateMeta":{"name":"longestAwesome","params":[{"name":"s","type":"string"}],"return":{"type":"integer"}}}